//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.3
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from D:\GitHub-Perso\MetricTools\Evaluator.Grammar\Evaluator.g4 by ANTLR 4.3

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591

namespace Evaluator.AutoGeneratedByGrammar {

using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="IEvaluatorListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.3")]
[System.CLSCompliant(false)]
public partial class EvaluatorBaseListener : IEvaluatorListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="EvaluatorParser.ContantePi"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterContantePi([NotNull] EvaluatorParser.ContantePiContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="EvaluatorParser.ContantePi"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitContantePi([NotNull] EvaluatorParser.ContantePiContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="EvaluatorParser.Variable"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVariable([NotNull] EvaluatorParser.VariableContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="EvaluatorParser.Variable"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVariable([NotNull] EvaluatorParser.VariableContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="EvaluatorParser.funcName"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFuncName([NotNull] EvaluatorParser.FuncNameContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="EvaluatorParser.funcName"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFuncName([NotNull] EvaluatorParser.FuncNameContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="EvaluatorParser.var"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVar([NotNull] EvaluatorParser.VarContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="EvaluatorParser.var"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVar([NotNull] EvaluatorParser.VarContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="EvaluatorParser.Number"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNumber([NotNull] EvaluatorParser.NumberContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="EvaluatorParser.Number"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNumber([NotNull] EvaluatorParser.NumberContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="EvaluatorParser.Power"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPower([NotNull] EvaluatorParser.PowerContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="EvaluatorParser.Power"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPower([NotNull] EvaluatorParser.PowerContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="EvaluatorParser.Function"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunction([NotNull] EvaluatorParser.FunctionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="EvaluatorParser.Function"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunction([NotNull] EvaluatorParser.FunctionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="EvaluatorParser.Boolean"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBoolean([NotNull] EvaluatorParser.BooleanContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="EvaluatorParser.Boolean"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBoolean([NotNull] EvaluatorParser.BooleanContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="EvaluatorParser.PlusOrMinusExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPlusOrMinusExpr([NotNull] EvaluatorParser.PlusOrMinusExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="EvaluatorParser.PlusOrMinusExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPlusOrMinusExpr([NotNull] EvaluatorParser.PlusOrMinusExprContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="EvaluatorParser.Constant"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConstant([NotNull] EvaluatorParser.ConstantContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="EvaluatorParser.Constant"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConstant([NotNull] EvaluatorParser.ConstantContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="EvaluatorParser.Not"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNot([NotNull] EvaluatorParser.NotContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="EvaluatorParser.Not"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNot([NotNull] EvaluatorParser.NotContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="EvaluatorParser.ToAtomExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterToAtomExpr([NotNull] EvaluatorParser.ToAtomExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="EvaluatorParser.ToAtomExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitToAtomExpr([NotNull] EvaluatorParser.ToAtomExprContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="EvaluatorParser.ChangeSign"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterChangeSign([NotNull] EvaluatorParser.ChangeSignContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="EvaluatorParser.ChangeSign"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitChangeSign([NotNull] EvaluatorParser.ChangeSignContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="EvaluatorParser.num"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNum([NotNull] EvaluatorParser.NumContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="EvaluatorParser.num"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNum([NotNull] EvaluatorParser.NumContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="EvaluatorParser.str"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStr([NotNull] EvaluatorParser.StrContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="EvaluatorParser.str"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStr([NotNull] EvaluatorParser.StrContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="EvaluatorParser.OrExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOrExpr([NotNull] EvaluatorParser.OrExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="EvaluatorParser.OrExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOrExpr([NotNull] EvaluatorParser.OrExprContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="EvaluatorParser.AndExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAndExpr([NotNull] EvaluatorParser.AndExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="EvaluatorParser.AndExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAndExpr([NotNull] EvaluatorParser.AndExprContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="EvaluatorParser.String"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterString([NotNull] EvaluatorParser.StringContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="EvaluatorParser.String"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitString([NotNull] EvaluatorParser.StringContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="EvaluatorParser.MultOrDivOrModExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMultOrDivOrModExpr([NotNull] EvaluatorParser.MultOrDivOrModExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="EvaluatorParser.MultOrDivOrModExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMultOrDivOrModExpr([NotNull] EvaluatorParser.MultOrDivOrModExprContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="EvaluatorParser.Braces"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBraces([NotNull] EvaluatorParser.BracesContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="EvaluatorParser.Braces"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBraces([NotNull] EvaluatorParser.BracesContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="EvaluatorParser.@bool"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBool([NotNull] EvaluatorParser.BoolContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="EvaluatorParser.@bool"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBool([NotNull] EvaluatorParser.BoolContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="EvaluatorParser.EqualityExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEqualityExpr([NotNull] EvaluatorParser.EqualityExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="EvaluatorParser.EqualityExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEqualityExpr([NotNull] EvaluatorParser.EqualityExprContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="EvaluatorParser.RelationalExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRelationalExpr([NotNull] EvaluatorParser.RelationalExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="EvaluatorParser.RelationalExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRelationalExpr([NotNull] EvaluatorParser.RelationalExprContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
} // namespace Evaluator.AutoGeneratedByGrammar
